# Copyright 2020 The Kubermatic Kubernetes Platform contributors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: Secret
metadata:
  name: kubeconfig-cluster-example
  namespace: kubermatic
type: Opaque
data:
  kubeconfig: YXBpVmVyc2lvbjogdjEKY2x1c3RlcnM6Ci0gY2x1c3RlcjoKICAgIGNlcnRpZmljYXRlLWF1dGhvcml0eS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VONVJFTkRRV0pEWjBGM1NVSkJaMGxDUVVSQlRrSm5hM0ZvYTJsSE9YY3dRa0ZSYzBaQlJFRldUVkpOZDBWUldVUldVVkZFUlhkd2NtUlhTbXdLWTIwMWJHUkhWbnBOUWpSWVJGUkplRTFFWTNkT2VrVjVUa1JGZUU1R2IxaEVWRTE0VFVSamQwNVVSWGxPUkVWNFRrWnZkMFpVUlZSTlFrVkhRVEZWUlFwQmVFMUxZVE5XYVZwWVNuVmFXRkpzWTNwRFEwRlRTWGRFVVZsS1MyOWFTV2gyWTA1QlVVVkNRbEZCUkdkblJWQkJSRU5EUVZGdlEyZG5SVUpCVFVaM0NqQkRMMWN6ZDFSRlREWkJjM0ZTU0ZKUVNuVnFaRXBsUlZWNlNtUjFZelJvTkcxcFJEbFplakZNUlVjNVdVWmhWREZWWXpGdWVubDVaR3RRVlRKQ1QyWUthemMyVHpCUWVsUmhjbVU1YjBKT1FqYzVWMlE0TUdkUGVqY3pXREV5ZDFwT1VtOVJOakZ6ZFdOQ1IxRkNkVTF3UjI5elFYRkdkMHBrV0RWcGJHMTJhZ28xYTNselFYRk1VVUZ5UjFWR1RGbHdlbnBTTlVSd2VWcFpPV2dyWW5OaVJqWmtWbkF3TjJ0V1IxSk1abkZyU0dKdk1XVnRjbXREWjJKMlJVNWhlbVpQQ2tOV2RETldaV2xHZDBsNVQyWXdWQzkyWlZOSU5HbG1kMGRsZHpOaFluTTNPRkpDU1hCYU1uTjJjbWRTWTNKMVdEbDZkWEF4TUdaNU1VODVkRWRtWWs0S2FqWk5iVXBSTTJkNlQzVnpWa2hhV25wNlUzY3JhRlpwUVdoMFJpdHJjRms0Vld4SVRtdGxORGxHYW1vdllVMTVPVVJyTDJrMlpVVXJORUZtUjNnNVVRcEpTVlU0VWpodWJGZFRkWHAxV0hwdVJFaGpRMEYzUlVGQllVMXFUVU5GZDBSbldVUldVakJRUVZGSUwwSkJVVVJCWjB0clRVRTRSMEV4VldSRmQwVkNDaTkzVVVaTlFVMUNRV1k0ZDBSUldVcExiMXBKYUhaalRrRlJSVXhDVVVGRVoyZEZRa0ZIT1dGS1lYUlJaamhVTjFWWU0ycEthREZvV1V4VFJEWk1lV2NLVjFrdmFraDRNbmxhTkhKTmQyMXNVbkJ3UkZOcU1UTndUbTVLYjNaNFlYUlBOMWhoYmxSSlVUaHBWMUoyVUdoT01uWllTRlV4TW5CeGJWbHBhWEJLTWdvNGIweEpRamhrTjBKSU4wdHBlR1ZoU0VadFMyTmxNRnB5YkVwcmFVUXpVRFl5WlRsNFpXbDVlblYyTkhwallqUlFXRWxrTjBSdGIyZ3ZNMU5PVlRjMENqWnViSFJRWmpCcEszaEVRVU40UlU0M1EzcGFjVXhDTjA5NWNFTlRkVnBvWnpscllXaFpSa041WTA1blJsZHNjemgxV1hkUlZFMU1TREZNVlRWalQwa0thMFZSYUhoVE5uWnJhV0p2VmpOcmVqSXdUeTlpTTJoeFEyWXJOR1pXTlVsSU5rMWhkMnROVjFaM1VsZHNNVkV5WnpWSVMySm9PV05DVTI1NVdIWndWZ3BxTUROTE5tZzJUbGhhYVROUGNrb3lTM0JzVTFoa1NrMUpLeXRKY1dkMGFtWkpORU54Ums1aWRVcGpLMnhMTDJoRGF6VlhRVVZZYVU5MmJ6MEtMUzB0TFMxRlRrUWdRMFZTVkVsR1NVTkJWRVV0TFMwdExRbz0KICAgIHNlcnZlcjogaHR0cHM6Ly9ra3AtZGVtby1hcGktbGItMTE5ODU0NjQzMS5ldS13ZXN0LTMuZWxiLmFtYXpvbmF3cy5jb206NjQ0MwogIG5hbWU6IGtrcC1kZW1vCmNvbnRleHRzOgotIGNvbnRleHQ6CiAgICBjbHVzdGVyOiBra3AtZGVtbwogICAgdXNlcjoga3ViZXJuZXRlcy1hZG1pbgogIG5hbWU6IGt1YmVybmV0ZXMtYWRtaW5Aa2twLWRlbW8KY3VycmVudC1jb250ZXh0OiBrdWJlcm5ldGVzLWFkbWluQGtrcC1kZW1vCmtpbmQ6IENvbmZpZwpwcmVmZXJlbmNlczoge30KdXNlcnM6Ci0gbmFtZToga3ViZXJuZXRlcy1hZG1pbgogIHVzZXI6CiAgICBjbGllbnQtY2VydGlmaWNhdGUtZGF0YTogTFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVTTRha05EUVdSeFowRjNTVUpCWjBsSlJFNHZaRVZuVVhGdk9WRjNSRkZaU2t0dldrbG9kbU5PUVZGRlRFSlJRWGRHVkVWVVRVSkZSMEV4VlVVS1FYaE5TMkV6Vm1sYVdFcDFXbGhTYkdONlFXVkdkekI1VFZSQk0wMUVZM2hOYWxGNFRWUlNZVVozTUhsTmFrRXpUVVJqZUUxcVVYaE9WR3hoVFVSUmVBcEdla0ZXUW1kT1ZrSkJiMVJFYms0MVl6TlNiR0pVY0hSWldFNHdXbGhLZWsxU2EzZEdkMWxFVmxGUlJFVjRRbkprVjBwc1kyMDFiR1JIVm5wTVYwWnJDbUpYYkhWTlNVbENTV3BCVGtKbmEzRm9hMmxIT1hjd1FrRlJSVVpCUVU5RFFWRTRRVTFKU1VKRFowdERRVkZGUVhkMmFrcFVkM2xuWTJjNGFWTjZNM1FLVWxoTGREZEpObkJUTkhKdVNXaHJkM0JpVkVKcUwxVjZaVk5VTUdsYVpqSkdZWHBKVm10eFJXSllUV0ZGVkVSSVIyWlFiRk16UjNGcU5qaFVOa1JITUFwdU9UUkJlazkzTW5WSGVscEtTamd3TTAxSVZFeGxlbk40TnpsMldWQTJjMUpVVXpCT056VkZkbXhtZGxJMVRWVkdSRE13ZFN0cGIwOXJVRmt6ZWxwRUNsYzJlSGhNUWxWdWJHNXdSeXN6WjNCamVtUm5PRmxaV2pRNFFtdHlhWFJUTHpWc1pGbHZaMUZoT1RSNlRIZ3pNU3R2TTI1c0x6TTNWbGhhTml0UlZsSUtUV2wzV0RsT2VDc3JRVTFEVHpncmNEVmlOMmh5WmxGSk9FY3JlVWhSUkZGc2FIUkdOV1ZGWkdzNFJtcHZOSGRsYmxkUWJYSjJXRkpOTmpReUwySjVWQXBqUzBJMVVYQkJUR1ExUWpoQlRtOUhNQzlpVVZsRGVYbFlORmxRZWxsUmVETlljMVU1UVVkNVpFZHpVVXhuY2sxSGVqZE1NVGhyY1VoSVRXTmFSWGhRQ2s5amJWcE9kMGxFUVZGQlFtOTVZM2RLVkVGUFFtZE9Wa2hST0VKQlpqaEZRa0ZOUTBKaFFYZEZkMWxFVmxJd2JFSkJkM2REWjFsSlMzZFpRa0pSVlVnS1FYZEpkMFJSV1VwTGIxcEphSFpqVGtGUlJVeENVVUZFWjJkRlFrRkdZMXBtUjNrd1UydFdjME5CWjJFeFUxRjBjVFZvSzBwUVJIVk1Ramx4S3pGSmR3bzNaSHBIY2pCVFMyUnBWaXR1YVVwaWJGTm5UR2huT0Zwd1JYRTJTRTFDTDNkUFdYcFhTMlJVT1doS1MzRnZOMmxrY2xWYU4zRm1iM3AyVUV4bVowVlVDalpCZFRaVVZXUkZWRk5JZDBWcmRWaGpjRGQ1TmxSRWNtcEdZVXQ1VW1SbGFITmFRVFZuZG1ST2JtOTZVRVYwZVV0S1kwNWlOa0ZKWjBveFpqSkVWMlFLVldwNVN6UnFjWGxQVHpCcFkwcE1jMjk1UTBadWRXaFVZM05tSzBWNVNsZG5lQ3RwYTFsT09VczFkQ3M1YXprNVZtRlpiMEZPUzNCTk5sSmFXR1pxVlFwaE1WbGtOakJDVGpOV1JqQnplazk1WjJjMVNDdE1OVzlQS3prNWIwcEphWFoyUkRWWU1HeGljbmh3Vmk5WlpYbDRjMW96Y1VGTGNqSkZZakJMTjNOMUNrOW9hemhTWldKNWVreHVaMjlNZFdGNUwwVm5ZVVJPVmt0NGFsRnZaSE5STDBwVk1TdEpNVXBMZFhwb01WUkNPVlZMWXowS0xTMHRMUzFGVGtRZ1EwVlNWRWxHU1VOQlZFVXRMUzB0TFFvPQogICAgY2xpZW50LWtleS1kYXRhOiBMUzB0TFMxQ1JVZEpUaUJTVTBFZ1VGSkpWa0ZVUlNCTFJWa3RMUzB0TFFwTlNVbEZiM2RKUWtGQlMwTkJVVVZCZDNacVNsUjNlV2RqWnpocFUzb3pkRkpZUzNRM1NUWndVelJ5Ymtsb2EzZHdZbFJDYWk5VmVtVlRWREJwV21ZeUNrWmhla2xXYTNGRllsaE5ZVVZVUkVoSFpsQnNVek5IY1dvMk9GUTJSRWN3YmprMFFYcFBkekoxUjNwYVNrbzRNRE5OU0ZSTVpYcHplRGM1ZGxsUU5uTUtVbFJUTUU0M05VVjJiR1oyVWpWTlZVWkVNekIxSzJsdlQydFFXVE42V2tSWE5uaDRURUpWYm14dWNFY3JNMmR3WTNwa1p6aFpXVm8wT0VKcmNtbDBVd292Tld4a1dXOW5VV0U1TkhwTWVETXhLMjh6Ym13dk16ZFdXRm8ySzFGV1VrMXBkMWc1VG5nckswRk5RMDg0SzNBMVlqZG9jbVpSU1RoSEszbElVVVJSQ214b2RFWTFaVVZrYXpoR2FtODBkMlZ1VjFCdGNuWllVazAyTkRJdllubFVZMHRDTlZGd1FVeGtOVUk0UVU1dlJ6QXZZbEZaUTNsNVdEUlpVSHBaVVhnS00xaHpWVGxCUjNsa1IzTlJUR2R5VFVkNk4wd3hPR3R4U0VoTlkxcEZlRkJQWTIxYVRuZEpSRUZSUVVKQmIwbENRVVZDWVROb1pUVnJlbmRUZDNJNFZBcE5ZalEyYmtNek5EWlBhVWRqVFZKUmFrUTBiRFkzTkZselYxUk1WR1YzWTNaS01YRTJjbGRSTkhsVk9WZE9NVlIyUjFKVmJrNXlTMHRuU2tSU09EZGpDbTFWU1hKb1VtZGxNeTlFTHk5TGVWbzBSbW81YjFSalNHWlRRbmhxT1Vnd1VHVnBXaTlQU25CaE1HUnZkbmhLWnl0aUt6QnpOVTVUZFVSVFJFMUtTamdLTVhJM2NuSkhPV2RxUkVObVN6ZzNWbGQwYTNNM2JFeExZMDFGTjNFclIyWlNWbGgzYUcxSFZVTmtjRnBrTW5JNGRFVTROazlRWWpGR2QwdHhRMFphWlFwMU9YbFpPVGxtTlVGc1lXZDFVbWRJYVdOQlUzZFdZakJGYVdVeE5scFhORzlqUzNCV1NETktaa3h1YTBjMVdHWnpVaTlaUzNkaVdXMWxWVzl0U1V4MENrTlpTQ3RZY0ZSM05tbEVVemRNY21JNVMwUmFhM1ZwZEhCb2RXMDBVekpyWkdsTVJWTkpVa2xMTW1WMGFXSktkeTlLTjNZdlIzcE1UUzlhVFRoQlFYRUtiVVZ0VjNaQlJVTm5XVVZCT1ZFdlJESjNZV0pHYTJZMlJYUldTSFpLUTJwNFFteEtkbkZLVkRoVWRrcFdha1J6YVZSbGJXeHBjbE53UkhVd0wwWXJiQXB3UTIxblFrMVJVR3RxSzJ0TFNWRmlSV2RGZW14ek1VYzBhV05xUmpkT09VUTNkbkEyUWpJclpEQjNaVzlHZEVWTFlrSnZSRzQzWWxFeVNVZGllQ3QzQ20xdWRtVktWakJVZVVJcmVtTmpibEIyUjNWWldXRTVRbXBWTjBVNFEycFJNVGRYZWpGRlNWWnVVbm96V0VZMWVFY3dhamhJUjAxRFoxbEZRWGsyZVhBS2NVcE1aRmdyU1hneFQxZDVVblJ0ZURONU5qWk9OR0ZMUlVWSVQxWnpVRms0WWtSUGRUUmxVa2htVm5wMFQyVkZaM0F4T0hjeU1FMUliMFEzZW0xSU1RcDNRMko2YUhvcmFETjJkR2R6V1VGR1NWSkNWRkJTUW5Ga00yZDRjM1ZoVTBKSVdHMHZXR2xMV1U0MVNYZFFiMDV0UlN0Wk1FSnJUMGwyUjI5UVdsVlBDamRGVmtRMVIxaG5OUzh3TWs1Q1pETm5VbFk1UVhCeWNITm9aVEZ1WTJwNlNtNUxSWFJvTUVObldVRjNiVzB6V0RGT2JWSmpOMnRRV0hsdFdrcHVOakFLWkN0a0sxaGhaVlZaY1RCME5GRnZiM1JPWW1aV1lVeDBWemhKY21jM1ZGRmxSV28yWVZGQ1JtMHdWM1J0TTFoaEwyczBSRVJNWlZGU2RqZFplRzl3TlFwUmJWaEVNbHBLWWtOelpsRlBaMjF6TUhkWWQxTm5lVzF6Y0hoblJXTk1ka0ZNTkhkWWRVNDNaak0wVW1oV2MydElXbkprVms5elJsbGhaMEpyWW1KS0NqaFpiVE5CVm5oVlEzUnBjMmQ2WVdadFRIZFllbEZMUW1kQ1dGZHVjRFZtYlZCTU1TdDFabUk1VTBOYWNWQlFTVTg1YkVkVFRHeDZhRTQ1VTNkdmEzWUtjbmR5TW1aNk0yRkhjSG93UldkWk4xRnhlR3h1WkRSTVkwaFNlR3h1YzFNNGFIVXpWeTlFWm5aVU9YRXZZVWhOT0ZVdmFqSmlZVlJ2WVdsUlFtMXZTd3BDYTJ3MVUydFZWM05JUWxsdU1uRk5XbXhOZUhwSk1EaHZhRUozVldob1RsZFFhemxZZWpobmNrWlpjbWxtYmtOU2VGRnVZbWhXVm1FemFrOXRhSFYxQ2xCalMxWkJiMGRDUVV4VlJ6SktVMGROU1V4NFdGRjRPRFZsTVd0aFZucGFPWEEzTVdVMUwyOHhNR0pRVVhsUmIxUjBhU3M0TVdSTU5YQm9WM3BUYmswS1ZUbFdWMDkwV1hoNFIzTjJVMVExWm1VMll5OXZNMm96YTBnMmIyVXlPR2xFYm05Vk5qVXphVUY0WkhWd1UwcHJOSFk1WTNoM1ZscG1WR1UzYWxOSk1RbzJUazltVWxVM2NHOVNOVUprYzNBMWFXY3lVRWc0WlU1MFkzWjFjVXN2YzFsSk5XdGlMMHRpUXpOemNFOVJUVVJ5VFRkMUNpMHRMUzB0UlU1RUlGSlRRU0JRVWtsV1FWUkZJRXRGV1MwdExTMHRDZz09
---
apiVersion: kubermatic.k8s.io/v1
kind: Seed
metadata:
  name: kubermatic
  namespace: kubermatic
spec:
  # these two fields are only informational
  country: FR
  location: Paris

  # List of datacenters where this seed cluster is allowed to create clusters in
  # In this example, user cluster will be deployed in eu-central-1 on AWS.
  datacenters:
    aws-eu-central-1a:
      country: DE
      location: EU (Frankfurt)
      spec:
        aws:
          images: null
          region: eu-central-1
        enforceAuditLogging: false
        enforcePodSecurityPolicy: false

  # reference to the kubeconfig to use when connecting to this seed cluster
  kubeconfig:
    name: kubeconfig-cluster-example
    namespace: kubermatic
